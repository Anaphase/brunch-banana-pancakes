/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['interfaces/exports.js']) {
  _$jscoverage['interfaces/exports.js'] = [];
  _$jscoverage['interfaces/exports.js'][6] = 0;
  _$jscoverage['interfaces/exports.js'][26] = 0;
  _$jscoverage['interfaces/exports.js'][27] = 0;
  _$jscoverage['interfaces/exports.js'][29] = 0;
  _$jscoverage['interfaces/exports.js'][31] = 0;
  _$jscoverage['interfaces/exports.js'][32] = 0;
  _$jscoverage['interfaces/exports.js'][33] = 0;
  _$jscoverage['interfaces/exports.js'][34] = 0;
  _$jscoverage['interfaces/exports.js'][35] = 0;
  _$jscoverage['interfaces/exports.js'][36] = 0;
  _$jscoverage['interfaces/exports.js'][38] = 0;
  _$jscoverage['interfaces/exports.js'][39] = 0;
  _$jscoverage['interfaces/exports.js'][41] = 0;
  _$jscoverage['interfaces/exports.js'][42] = 0;
  _$jscoverage['interfaces/exports.js'][44] = 0;
  _$jscoverage['interfaces/exports.js'][45] = 0;
  _$jscoverage['interfaces/exports.js'][47] = 0;
  _$jscoverage['interfaces/exports.js'][48] = 0;
  _$jscoverage['interfaces/exports.js'][50] = 0;
  _$jscoverage['interfaces/exports.js'][53] = 0;
  _$jscoverage['interfaces/exports.js'][54] = 0;
  _$jscoverage['interfaces/exports.js'][55] = 0;
  _$jscoverage['interfaces/exports.js'][56] = 0;
}
_$jscoverage['interfaces/exports.js'][6]++;
var Suite = require("../suite"), Test = require("../test");
_$jscoverage['interfaces/exports.js'][26]++;
module.exports = (function (suite) {
  _$jscoverage['interfaces/exports.js'][27]++;
  var suites = [suite];
  _$jscoverage['interfaces/exports.js'][29]++;
  suite.on("require", visit);
  _$jscoverage['interfaces/exports.js'][31]++;
  function visit(obj) {
    _$jscoverage['interfaces/exports.js'][32]++;
    var suite;
    _$jscoverage['interfaces/exports.js'][33]++;
    for (var key in obj) {
      _$jscoverage['interfaces/exports.js'][34]++;
      if ("function" == typeof obj[key]) {
        _$jscoverage['interfaces/exports.js'][35]++;
        var fn = obj[key];
        _$jscoverage['interfaces/exports.js'][36]++;
        switch (key) {
        case "before":
          _$jscoverage['interfaces/exports.js'][38]++;
          suites[0].beforeAll(fn);
          _$jscoverage['interfaces/exports.js'][39]++;
          break;
        case "after":
          _$jscoverage['interfaces/exports.js'][41]++;
          suites[0].afterAll(fn);
          _$jscoverage['interfaces/exports.js'][42]++;
          break;
        case "beforeEach":
          _$jscoverage['interfaces/exports.js'][44]++;
          suites[0].beforeEach(fn);
          _$jscoverage['interfaces/exports.js'][45]++;
          break;
        case "afterEach":
          _$jscoverage['interfaces/exports.js'][47]++;
          suites[0].afterEach(fn);
          _$jscoverage['interfaces/exports.js'][48]++;
          break;
        default:
          _$jscoverage['interfaces/exports.js'][50]++;
          suites[0].addTest(new Test(key, fn));
        }
      }
      else {
        _$jscoverage['interfaces/exports.js'][53]++;
        var suite = Suite.create(suites[0], key);
        _$jscoverage['interfaces/exports.js'][54]++;
        suites.unshift(suite);
        _$jscoverage['interfaces/exports.js'][55]++;
        visit(obj[key]);
        _$jscoverage['interfaces/exports.js'][56]++;
        suites.shift();
      }
}
}
});
_$jscoverage['interfaces/exports.js'].source = ["","/**"," * Module dependencies."," */","","var Suite = require('../suite')","  , Test = require('../test');","","/**"," * TDD-style interface:"," * "," *     exports.Array = {"," *       '#indexOf()': {"," *         'should return -1 when the value is not present': function(){"," *           "," *         },"," *"," *         'should return the correct index when the value is present': function(){"," *           "," *         }"," *       }"," *     };"," * "," */","","module.exports = function(suite){","  var suites = [suite];","","  suite.on('require', visit);","","  function visit(obj) {","    var suite;","    for (var key in obj) {","      if ('function' == typeof obj[key]) {","        var fn = obj[key];","        switch (key) {","          case 'before':","            suites[0].beforeAll(fn);","            break;","          case 'after':","            suites[0].afterAll(fn);","            break;","          case 'beforeEach':","            suites[0].beforeEach(fn);","            break;","          case 'afterEach':","            suites[0].afterEach(fn);","            break;","          default:","            suites[0].addTest(new Test(key, fn));","        }","      } else {","        var suite = Suite.create(suites[0], key);","        suites.unshift(suite);","        visit(obj[key]);","        suites.shift();","      }","    }","  }","};"];
