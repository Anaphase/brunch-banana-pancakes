/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['interfaces/qunit.js']) {
  _$jscoverage['interfaces/qunit.js'] = [];
  _$jscoverage['interfaces/qunit.js'][6] = 0;
  _$jscoverage['interfaces/qunit.js'][34] = 0;
  _$jscoverage['interfaces/qunit.js'][35] = 0;
  _$jscoverage['interfaces/qunit.js'][37] = 0;
  _$jscoverage['interfaces/qunit.js'][43] = 0;
  _$jscoverage['interfaces/qunit.js'][44] = 0;
  _$jscoverage['interfaces/qunit.js'][51] = 0;
  _$jscoverage['interfaces/qunit.js'][52] = 0;
  _$jscoverage['interfaces/qunit.js'][59] = 0;
  _$jscoverage['interfaces/qunit.js'][60] = 0;
  _$jscoverage['interfaces/qunit.js'][67] = 0;
  _$jscoverage['interfaces/qunit.js'][68] = 0;
  _$jscoverage['interfaces/qunit.js'][75] = 0;
  _$jscoverage['interfaces/qunit.js'][76] = 0;
  _$jscoverage['interfaces/qunit.js'][77] = 0;
  _$jscoverage['interfaces/qunit.js'][78] = 0;
  _$jscoverage['interfaces/qunit.js'][87] = 0;
  _$jscoverage['interfaces/qunit.js'][88] = 0;
}
_$jscoverage['interfaces/qunit.js'][6]++;
var Suite = require("../suite"), Test = require("../test");
_$jscoverage['interfaces/qunit.js'][34]++;
module.exports = (function (suite) {
  _$jscoverage['interfaces/qunit.js'][35]++;
  var suites = [suite];
  _$jscoverage['interfaces/qunit.js'][37]++;
  suite.on("pre-require", (function (context) {
  _$jscoverage['interfaces/qunit.js'][43]++;
  context.before = (function (fn) {
  _$jscoverage['interfaces/qunit.js'][44]++;
  suites[0].beforeAll(fn);
});
  _$jscoverage['interfaces/qunit.js'][51]++;
  context.after = (function (fn) {
  _$jscoverage['interfaces/qunit.js'][52]++;
  suites[0].afterAll(fn);
});
  _$jscoverage['interfaces/qunit.js'][59]++;
  context.beforeEach = (function (fn) {
  _$jscoverage['interfaces/qunit.js'][60]++;
  suites[0].beforeEach(fn);
});
  _$jscoverage['interfaces/qunit.js'][67]++;
  context.afterEach = (function (fn) {
  _$jscoverage['interfaces/qunit.js'][68]++;
  suites[0].afterEach(fn);
});
  _$jscoverage['interfaces/qunit.js'][75]++;
  context.suite = (function (title) {
  _$jscoverage['interfaces/qunit.js'][76]++;
  if (suites.length > 1) {
    _$jscoverage['interfaces/qunit.js'][76]++;
    suites.shift();
  }
  _$jscoverage['interfaces/qunit.js'][77]++;
  var suite = Suite.create(suites[0], title);
  _$jscoverage['interfaces/qunit.js'][78]++;
  suites.unshift(suite);
});
  _$jscoverage['interfaces/qunit.js'][87]++;
  context.test = (function (title, fn) {
  _$jscoverage['interfaces/qunit.js'][88]++;
  suites[0].addTest(new Test(title, fn));
});
}));
});
_$jscoverage['interfaces/qunit.js'].source = ["","/**"," * Module dependencies."," */","","var Suite = require('../suite')","  , Test = require('../test');","","/**"," * QUnit-style interface:"," * "," *     suite('Array');"," *     "," *     test('#length', function(){"," *       var arr = [1,2,3];"," *       ok(arr.length == 3);"," *     });"," *     "," *     test('#indexOf()', function(){"," *       var arr = [1,2,3];"," *       ok(arr.indexOf(1) == 0);"," *       ok(arr.indexOf(2) == 1);"," *       ok(arr.indexOf(3) == 2);"," *     });"," *     "," *     suite('String');"," *     "," *     test('#length', function(){"," *       ok('foo'.length == 3);"," *     });"," * "," */","","module.exports = function(suite){","  var suites = [suite];","","  suite.on('pre-require', function(context){","","    /**","     * Execute before running tests.","     */","","    context.before = function(fn){","      suites[0].beforeAll(fn);","    };","","    /**","     * Execute after running tests.","     */","","    context.after = function(fn){","      suites[0].afterAll(fn);","    };","","    /**","     * Execute before each test case.","     */","","    context.beforeEach = function(fn){","      suites[0].beforeEach(fn);","    };","","    /**","     * Execute after each test case.","     */","","    context.afterEach = function(fn){","      suites[0].afterEach(fn);","    };","","    /**","     * Describe a \"suite\" with the given `title`.","     */","  ","    context.suite = function(title){","      if (suites.length &gt; 1) suites.shift();","      var suite = Suite.create(suites[0], title);","      suites.unshift(suite);","    };","","    /**","     * Describe a specification or test-case","     * with the given `title` and callback `fn`","     * acting as a thunk.","     */","","    context.test = function(title, fn){","      suites[0].addTest(new Test(title, fn));","    };","  });","};"];
