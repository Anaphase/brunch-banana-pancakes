/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['interfaces/tdd.js']) {
  _$jscoverage['interfaces/tdd.js'] = [];
  _$jscoverage['interfaces/tdd.js'][6] = 0;
  _$jscoverage['interfaces/tdd.js'][34] = 0;
  _$jscoverage['interfaces/tdd.js'][35] = 0;
  _$jscoverage['interfaces/tdd.js'][37] = 0;
  _$jscoverage['interfaces/tdd.js'][43] = 0;
  _$jscoverage['interfaces/tdd.js'][44] = 0;
  _$jscoverage['interfaces/tdd.js'][51] = 0;
  _$jscoverage['interfaces/tdd.js'][52] = 0;
  _$jscoverage['interfaces/tdd.js'][59] = 0;
  _$jscoverage['interfaces/tdd.js'][60] = 0;
  _$jscoverage['interfaces/tdd.js'][67] = 0;
  _$jscoverage['interfaces/tdd.js'][68] = 0;
  _$jscoverage['interfaces/tdd.js'][77] = 0;
  _$jscoverage['interfaces/tdd.js'][78] = 0;
  _$jscoverage['interfaces/tdd.js'][79] = 0;
  _$jscoverage['interfaces/tdd.js'][80] = 0;
  _$jscoverage['interfaces/tdd.js'][81] = 0;
  _$jscoverage['interfaces/tdd.js'][90] = 0;
  _$jscoverage['interfaces/tdd.js'][91] = 0;
}
_$jscoverage['interfaces/tdd.js'][6]++;
var Suite = require("../suite"), Test = require("../test");
_$jscoverage['interfaces/tdd.js'][34]++;
module.exports = (function (suite) {
  _$jscoverage['interfaces/tdd.js'][35]++;
  var suites = [suite];
  _$jscoverage['interfaces/tdd.js'][37]++;
  suite.on("pre-require", (function (context) {
  _$jscoverage['interfaces/tdd.js'][43]++;
  context.setup = (function (fn) {
  _$jscoverage['interfaces/tdd.js'][44]++;
  suites[0].beforeEach(fn);
});
  _$jscoverage['interfaces/tdd.js'][51]++;
  context.teardown = (function (fn) {
  _$jscoverage['interfaces/tdd.js'][52]++;
  suites[0].afterEach(fn);
});
  _$jscoverage['interfaces/tdd.js'][59]++;
  context.suiteSetup = (function (fn) {
  _$jscoverage['interfaces/tdd.js'][60]++;
  suites[0].beforeAll(fn);
});
  _$jscoverage['interfaces/tdd.js'][67]++;
  context.suiteTeardown = (function (fn) {
  _$jscoverage['interfaces/tdd.js'][68]++;
  suites[0].afterAll(fn);
});
  _$jscoverage['interfaces/tdd.js'][77]++;
  context.suite = (function (title, fn) {
  _$jscoverage['interfaces/tdd.js'][78]++;
  var suite = Suite.create(suites[0], title);
  _$jscoverage['interfaces/tdd.js'][79]++;
  suites.unshift(suite);
  _$jscoverage['interfaces/tdd.js'][80]++;
  fn();
  _$jscoverage['interfaces/tdd.js'][81]++;
  suites.shift();
});
  _$jscoverage['interfaces/tdd.js'][90]++;
  context.test = (function (title, fn) {
  _$jscoverage['interfaces/tdd.js'][91]++;
  suites[0].addTest(new Test(title, fn));
});
}));
});
_$jscoverage['interfaces/tdd.js'].source = ["","/**"," * Module dependencies."," */","","var Suite = require('../suite')","  , Test = require('../test');","","/**"," * TDD-style interface:"," *"," *      suite('Array', function(){"," *        suite('#indexOf()', function(){"," *          suiteSetup(function(){"," *"," *          });"," *          "," *          test('should return -1 when not present', function(){"," *"," *          });"," *"," *          test('should return the index when present', function(){"," *"," *          });"," *"," *          suiteTeardown(function(){"," *"," *          });"," *        });"," *      });"," *"," */","","module.exports = function(suite){","  var suites = [suite];","","  suite.on('pre-require', function(context){","","    /**","     * Execute before each test case.","     */","","    context.setup = function(fn){","      suites[0].beforeEach(fn);","    };","","    /**","     * Execute after each test case.","     */","","    context.teardown = function(fn){","      suites[0].afterEach(fn);","    };","","    /**","     * Execute before the suite.","     */","","    context.suiteSetup = function(fn){","      suites[0].beforeAll(fn);","    };","","    /**","     * Execute after the suite.","     */","","    context.suiteTeardown = function(fn){","      suites[0].afterAll(fn);","    };","","    /**","     * Describe a \"suite\" with the given `title`","     * and callback `fn` containing nested suites","     * and/or tests.","     */","","    context.suite = function(title, fn){","      var suite = Suite.create(suites[0], title);","      suites.unshift(suite);","      fn();","      suites.shift();","    };","","    /**","     * Describe a specification or test-case","     * with the given `title` and callback `fn`","     * acting as a thunk.","     */","","    context.test = function(title, fn){","      suites[0].addTest(new Test(title, fn));","    };","  });","};"];
