/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['reporters/landing.js']) {
  _$jscoverage['reporters/landing.js'] = [];
  _$jscoverage['reporters/landing.js'][6] = 0;
  _$jscoverage['reporters/landing.js'][14] = 0;
  _$jscoverage['reporters/landing.js'][20] = 0;
  _$jscoverage['reporters/landing.js'][26] = 0;
  _$jscoverage['reporters/landing.js'][32] = 0;
  _$jscoverage['reporters/landing.js'][41] = 0;
  _$jscoverage['reporters/landing.js'][42] = 0;
  _$jscoverage['reporters/landing.js'][44] = 0;
  _$jscoverage['reporters/landing.js'][53] = 0;
  _$jscoverage['reporters/landing.js'][54] = 0;
  _$jscoverage['reporters/landing.js'][55] = 0;
  _$jscoverage['reporters/landing.js'][58] = 0;
  _$jscoverage['reporters/landing.js'][59] = 0;
  _$jscoverage['reporters/landing.js'][60] = 0;
  _$jscoverage['reporters/landing.js'][63] = 0;
  _$jscoverage['reporters/landing.js'][65] = 0;
  _$jscoverage['reporters/landing.js'][70] = 0;
  _$jscoverage['reporters/landing.js'][71] = 0;
  _$jscoverage['reporters/landing.js'][72] = 0;
  _$jscoverage['reporters/landing.js'][76] = 0;
  _$jscoverage['reporters/landing.js'][77] = 0;
  _$jscoverage['reporters/landing.js'][78] = 0;
  _$jscoverage['reporters/landing.js'][79] = 0;
  _$jscoverage['reporters/landing.js'][80] = 0;
  _$jscoverage['reporters/landing.js'][81] = 0;
  _$jscoverage['reporters/landing.js'][82] = 0;
  _$jscoverage['reporters/landing.js'][83] = 0;
  _$jscoverage['reporters/landing.js'][86] = 0;
  _$jscoverage['reporters/landing.js'][87] = 0;
  _$jscoverage['reporters/landing.js'][88] = 0;
  _$jscoverage['reporters/landing.js'][89] = 0;
  _$jscoverage['reporters/landing.js'][97] = 0;
}
_$jscoverage['reporters/landing.js'][6]++;
var Base = require("./base"), cursor = Base.cursor, color = Base.color;
_$jscoverage['reporters/landing.js'][14]++;
exports = module.exports = Landing;
_$jscoverage['reporters/landing.js'][20]++;
Base.colors.plane = 0;
_$jscoverage['reporters/landing.js'][26]++;
Base.colors["plane crash"] = 31;
_$jscoverage['reporters/landing.js'][32]++;
Base.colors.runway = 90;
_$jscoverage['reporters/landing.js'][41]++;
function Landing(runner) {
  _$jscoverage['reporters/landing.js'][42]++;
  Base.call(this, runner);
  _$jscoverage['reporters/landing.js'][44]++;
  var self = this, stats = this.stats, width = Base.window.width * 0.75 | 0, total = runner.total, stream = process.stdout, plane = color("plane", "\u00e2\u009c\u0088"), crashed = -1, n = 0;
  _$jscoverage['reporters/landing.js'][53]++;
  function runway() {
    _$jscoverage['reporters/landing.js'][54]++;
    var buf = Array(width).join("-");
    _$jscoverage['reporters/landing.js'][55]++;
    return "  " + color("runway", buf);
}
  _$jscoverage['reporters/landing.js'][58]++;
  runner.on("start", (function () {
  _$jscoverage['reporters/landing.js'][59]++;
  stream.write("\n  ");
  _$jscoverage['reporters/landing.js'][60]++;
  cursor.hide();
}));
  _$jscoverage['reporters/landing.js'][63]++;
  runner.on("test end", (function (test) {
  _$jscoverage['reporters/landing.js'][65]++;
  var col = -1 == crashed? width * ++n / total | 0: crashed;
  _$jscoverage['reporters/landing.js'][70]++;
  if ("failed" == test.state) {
    _$jscoverage['reporters/landing.js'][71]++;
    plane = color("plane crash", "\u00e2\u009c\u0088");
    _$jscoverage['reporters/landing.js'][72]++;
    crashed = col;
  }
  _$jscoverage['reporters/landing.js'][76]++;
  stream.write("\u001b[4F\n\n");
  _$jscoverage['reporters/landing.js'][77]++;
  stream.write(runway());
  _$jscoverage['reporters/landing.js'][78]++;
  stream.write("\n  ");
  _$jscoverage['reporters/landing.js'][79]++;
  stream.write(color("runway", Array(col).join("\u00e2\u008b\u0085")));
  _$jscoverage['reporters/landing.js'][80]++;
  stream.write(plane);
  _$jscoverage['reporters/landing.js'][81]++;
  stream.write(color("runway", Array(width - col).join("\u00e2\u008b\u0085") + "\n"));
  _$jscoverage['reporters/landing.js'][82]++;
  stream.write(runway());
  _$jscoverage['reporters/landing.js'][83]++;
  stream.write("\u001b[0m");
}));
  _$jscoverage['reporters/landing.js'][86]++;
  runner.on("end", (function () {
  _$jscoverage['reporters/landing.js'][87]++;
  cursor.show();
  _$jscoverage['reporters/landing.js'][88]++;
  console.log();
  _$jscoverage['reporters/landing.js'][89]++;
  self.epilogue();
}));
}
_$jscoverage['reporters/landing.js'][97]++;
Landing.prototype.__proto__ = Base.prototype;
_$jscoverage['reporters/landing.js'].source = ["","/**"," * Module dependencies."," */","","var Base = require('./base')","  , cursor = Base.cursor","  , color = Base.color;","","/**"," * Expose `Landing`."," */","","exports = module.exports = Landing;","","/**"," * Airplane color."," */","","Base.colors.plane = 0;","","/**"," * Airplane crash color."," */","","Base.colors['plane crash'] = 31;","","/**"," * Runway color."," */","","Base.colors.runway = 90;","","/**"," * Initialize a new `Landing` reporter."," *"," * @param {Runner} runner"," * @api public"," */","","function Landing(runner) {","  Base.call(this, runner);","","  var self = this","    , stats = this.stats","    , width = Base.window.width * .75 | 0","    , total = runner.total","    , stream = process.stdout","    , plane = color('plane', '&#226;&#156;&#136;')","    , crashed = -1","    , n = 0;","","  function runway() {","    var buf = Array(width).join('-');","    return '  ' + color('runway', buf);","  }","","  runner.on('start', function(){","    stream.write('\\n  ');","    cursor.hide();","  });","","  runner.on('test end', function(test){","    // check if the plane crashed","    var col = -1 == crashed","      ? width * ++n / total | 0","      : crashed;","","    // show the crash","    if ('failed' == test.state) {","      plane = color('plane crash', '&#226;&#156;&#136;');","      crashed = col;","    }","","    // render landing strip","    stream.write('\\033[4F\\n\\n');","    stream.write(runway());","    stream.write('\\n  ');","    stream.write(color('runway', Array(col).join('&#226;&#139;&#133;')));","    stream.write(plane)","    stream.write(color('runway', Array(width - col).join('&#226;&#139;&#133;') + '\\n'));","    stream.write(runway());","    stream.write('\\033[0m');","  });","","  runner.on('end', function(){","    cursor.show();","    console.log();","    self.epilogue();","  });","}","","/**"," * Inherit from `Base.prototype`."," */","","Landing.prototype.__proto__ = Base.prototype;"];
