/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['reporters/doc.js']) {
  _$jscoverage['reporters/doc.js'] = [];
  _$jscoverage['reporters/doc.js'][6] = 0;
  _$jscoverage['reporters/doc.js'][13] = 0;
  _$jscoverage['reporters/doc.js'][22] = 0;
  _$jscoverage['reporters/doc.js'][23] = 0;
  _$jscoverage['reporters/doc.js'][25] = 0;
  _$jscoverage['reporters/doc.js'][30] = 0;
  _$jscoverage['reporters/doc.js'][31] = 0;
  _$jscoverage['reporters/doc.js'][34] = 0;
  _$jscoverage['reporters/doc.js'][35] = 0;
  _$jscoverage['reporters/doc.js'][36] = 0;
  _$jscoverage['reporters/doc.js'][37] = 0;
  _$jscoverage['reporters/doc.js'][38] = 0;
  _$jscoverage['reporters/doc.js'][39] = 0;
  _$jscoverage['reporters/doc.js'][40] = 0;
  _$jscoverage['reporters/doc.js'][43] = 0;
  _$jscoverage['reporters/doc.js'][44] = 0;
  _$jscoverage['reporters/doc.js'][45] = 0;
  _$jscoverage['reporters/doc.js'][46] = 0;
  _$jscoverage['reporters/doc.js'][47] = 0;
  _$jscoverage['reporters/doc.js'][48] = 0;
  _$jscoverage['reporters/doc.js'][51] = 0;
  _$jscoverage['reporters/doc.js'][52] = 0;
  _$jscoverage['reporters/doc.js'][53] = 0;
  _$jscoverage['reporters/doc.js'][54] = 0;
  _$jscoverage['reporters/doc.js'][63] = 0;
  _$jscoverage['reporters/doc.js'][64] = 0;
  _$jscoverage['reporters/doc.js'][68] = 0;
  _$jscoverage['reporters/doc.js'][71] = 0;
  _$jscoverage['reporters/doc.js'][73] = 0;
}
_$jscoverage['reporters/doc.js'][6]++;
var Base = require("./base"), utils = require("../utils");
_$jscoverage['reporters/doc.js'][13]++;
exports = module.exports = Doc;
_$jscoverage['reporters/doc.js'][22]++;
function Doc(runner) {
  _$jscoverage['reporters/doc.js'][23]++;
  Base.call(this, runner);
  _$jscoverage['reporters/doc.js'][25]++;
  var self = this, stats = this.stats, total = runner.total, indents = 2;
  _$jscoverage['reporters/doc.js'][30]++;
  function indent() {
    _$jscoverage['reporters/doc.js'][31]++;
    return Array(indents).join("  ");
}
  _$jscoverage['reporters/doc.js'][34]++;
  runner.on("suite", (function (suite) {
  _$jscoverage['reporters/doc.js'][35]++;
  if (suite.root) {
    _$jscoverage['reporters/doc.js'][35]++;
    return;
  }
  _$jscoverage['reporters/doc.js'][36]++;
  ++indents;
  _$jscoverage['reporters/doc.js'][37]++;
  console.log("%s<section class=\"suite\">", indent());
  _$jscoverage['reporters/doc.js'][38]++;
  ++indents;
  _$jscoverage['reporters/doc.js'][39]++;
  console.log("%s<h1>%s</h1>", indent(), suite.title);
  _$jscoverage['reporters/doc.js'][40]++;
  console.log("%s<dl>", indent());
}));
  _$jscoverage['reporters/doc.js'][43]++;
  runner.on("suite end", (function (suite) {
  _$jscoverage['reporters/doc.js'][44]++;
  if (suite.root) {
    _$jscoverage['reporters/doc.js'][44]++;
    return;
  }
  _$jscoverage['reporters/doc.js'][45]++;
  console.log("%s</dl>", indent());
  _$jscoverage['reporters/doc.js'][46]++;
  --indents;
  _$jscoverage['reporters/doc.js'][47]++;
  console.log("%s</section>", indent());
  _$jscoverage['reporters/doc.js'][48]++;
  --indents;
}));
  _$jscoverage['reporters/doc.js'][51]++;
  runner.on("pass", (function (test) {
  _$jscoverage['reporters/doc.js'][52]++;
  console.log("%s  <dt>%s</dt>", indent(), test.title);
  _$jscoverage['reporters/doc.js'][53]++;
  var code = utils.escape(clean(test.fn.toString()));
  _$jscoverage['reporters/doc.js'][54]++;
  console.log("%s  <dd><pre><code>%s</code></pre></dd>", indent(), code);
}));
}
_$jscoverage['reporters/doc.js'][63]++;
function clean(str) {
  _$jscoverage['reporters/doc.js'][64]++;
  str = str.replace(/^function *\(.*\) *{/, "").replace(/\s+\}$/, "");
  _$jscoverage['reporters/doc.js'][68]++;
  var spaces = str.match(/^\n?( *)/)[1].length, re = new RegExp("^ {" + spaces + "}", "gm");
  _$jscoverage['reporters/doc.js'][71]++;
  str = str.replace(re, "");
  _$jscoverage['reporters/doc.js'][73]++;
  return str;
}
_$jscoverage['reporters/doc.js'].source = ["","/**"," * Module dependencies."," */","","var Base = require('./base')","  , utils = require('../utils');","","/**"," * Expose `Doc`."," */","","exports = module.exports = Doc;","","/**"," * Initialize a new `Doc` reporter."," *"," * @param {Runner} runner"," * @api public"," */","","function Doc(runner) {","  Base.call(this, runner);","","  var self = this","    , stats = this.stats","    , total = runner.total","    , indents = 2;","","  function indent() {","    return Array(indents).join('  ');","  }","","  runner.on('suite', function(suite){","    if (suite.root) return;","    ++indents;","    console.log('%s&lt;section class=\"suite\"&gt;', indent());","    ++indents;","    console.log('%s&lt;h1&gt;%s&lt;/h1&gt;', indent(), suite.title);","    console.log('%s&lt;dl&gt;', indent());","  });","","  runner.on('suite end', function(suite){","    if (suite.root) return;","    console.log('%s&lt;/dl&gt;', indent());","    --indents;","    console.log('%s&lt;/section&gt;', indent());","    --indents;","  });","","  runner.on('pass', function(test){","    console.log('%s  &lt;dt&gt;%s&lt;/dt&gt;', indent(), test.title);","    var code = utils.escape(clean(test.fn.toString()));","    console.log('%s  &lt;dd&gt;&lt;pre&gt;&lt;code&gt;%s&lt;/code&gt;&lt;/pre&gt;&lt;/dd&gt;', indent(), code);","  });","}","","/**"," * Strip the function definition from `str`,"," * and re-indent for pre whitespace."," */","","function clean(str) {","  str = str","    .replace(/^function *\\(.*\\) *{/, '')","    .replace(/\\s+\\}$/, '');","","  var spaces = str.match(/^\\n?( *)/)[1].length","    , re = new RegExp('^ {' + spaces + '}', 'gm');","","  str = str.replace(re, '');","","  return str;","}"];
