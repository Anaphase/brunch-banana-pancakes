/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['reporters/progress.js']) {
  _$jscoverage['reporters/progress.js'] = [];
  _$jscoverage['reporters/progress.js'][6] = 0;
  _$jscoverage['reporters/progress.js'][14] = 0;
  _$jscoverage['reporters/progress.js'][20] = 0;
  _$jscoverage['reporters/progress.js'][30] = 0;
  _$jscoverage['reporters/progress.js'][31] = 0;
  _$jscoverage['reporters/progress.js'][33] = 0;
  _$jscoverage['reporters/progress.js'][42] = 0;
  _$jscoverage['reporters/progress.js'][43] = 0;
  _$jscoverage['reporters/progress.js'][44] = 0;
  _$jscoverage['reporters/progress.js'][45] = 0;
  _$jscoverage['reporters/progress.js'][46] = 0;
  _$jscoverage['reporters/progress.js'][49] = 0;
  _$jscoverage['reporters/progress.js'][50] = 0;
  _$jscoverage['reporters/progress.js'][51] = 0;
  _$jscoverage['reporters/progress.js'][55] = 0;
  _$jscoverage['reporters/progress.js'][56] = 0;
  _$jscoverage['reporters/progress.js'][61] = 0;
  _$jscoverage['reporters/progress.js'][62] = 0;
  _$jscoverage['reporters/progress.js'][63] = 0;
  _$jscoverage['reporters/progress.js'][64] = 0;
  _$jscoverage['reporters/progress.js'][65] = 0;
  _$jscoverage['reporters/progress.js'][66] = 0;
  _$jscoverage['reporters/progress.js'][67] = 0;
  _$jscoverage['reporters/progress.js'][68] = 0;
  _$jscoverage['reporters/progress.js'][74] = 0;
  _$jscoverage['reporters/progress.js'][75] = 0;
  _$jscoverage['reporters/progress.js'][76] = 0;
  _$jscoverage['reporters/progress.js'][77] = 0;
  _$jscoverage['reporters/progress.js'][85] = 0;
}
_$jscoverage['reporters/progress.js'][6]++;
var Base = require("./base"), cursor = Base.cursor, color = Base.color;
_$jscoverage['reporters/progress.js'][14]++;
exports = module.exports = Progress;
_$jscoverage['reporters/progress.js'][20]++;
Base.colors.progress = 90;
_$jscoverage['reporters/progress.js'][30]++;
function Progress(runner, options) {
  _$jscoverage['reporters/progress.js'][31]++;
  Base.call(this, runner);
  _$jscoverage['reporters/progress.js'][33]++;
  var self = this, options = options || {}, stats = this.stats, width = Base.window.width * 0.5 | 0, total = runner.total, complete = 0, max = Math.max;
  _$jscoverage['reporters/progress.js'][42]++;
  options.open = options.open || "[";
  _$jscoverage['reporters/progress.js'][43]++;
  options.complete = options.complete || "\u00e2\u0096\u00ac";
  _$jscoverage['reporters/progress.js'][44]++;
  options.incomplete = options.incomplete || "\u00e2\u008b\u0085";
  _$jscoverage['reporters/progress.js'][45]++;
  options.close = options.close || "]";
  _$jscoverage['reporters/progress.js'][46]++;
  options.verbose = false;
  _$jscoverage['reporters/progress.js'][49]++;
  runner.on("start", (function () {
  _$jscoverage['reporters/progress.js'][50]++;
  console.log();
  _$jscoverage['reporters/progress.js'][51]++;
  cursor.hide();
}));
  _$jscoverage['reporters/progress.js'][55]++;
  runner.on("test end", (function () {
  _$jscoverage['reporters/progress.js'][56]++;
  var incomplete = total - complete, percent = complete++ / total, n = width * percent | 0, i = width - n;
  _$jscoverage['reporters/progress.js'][61]++;
  cursor.CR();
  _$jscoverage['reporters/progress.js'][62]++;
  process.stdout.write("\u001b[J");
  _$jscoverage['reporters/progress.js'][63]++;
  process.stdout.write(color("progress", "  " + options.open));
  _$jscoverage['reporters/progress.js'][64]++;
  process.stdout.write(Array(n).join(options.complete));
  _$jscoverage['reporters/progress.js'][65]++;
  process.stdout.write(Array(i).join(options.incomplete));
  _$jscoverage['reporters/progress.js'][66]++;
  process.stdout.write(color("progress", options.close));
  _$jscoverage['reporters/progress.js'][67]++;
  if (options.verbose) {
    _$jscoverage['reporters/progress.js'][68]++;
    process.stdout.write(color("progress", " " + complete + " of " + total));
  }
}));
  _$jscoverage['reporters/progress.js'][74]++;
  runner.on("end", (function () {
  _$jscoverage['reporters/progress.js'][75]++;
  cursor.show();
  _$jscoverage['reporters/progress.js'][76]++;
  console.log();
  _$jscoverage['reporters/progress.js'][77]++;
  self.epilogue();
}));
}
_$jscoverage['reporters/progress.js'][85]++;
Progress.prototype.__proto__ = Base.prototype;
_$jscoverage['reporters/progress.js'].source = ["","/**"," * Module dependencies."," */","","var Base = require('./base')","  , cursor = Base.cursor","  , color = Base.color;","","/**"," * Expose `Progress`."," */","","exports = module.exports = Progress;","","/**"," * General progress bar color."," */","","Base.colors.progress = 90;","","/**"," * Initialize a new `Progress` bar test reporter."," *"," * @param {Runner} runner"," * @param {Object} options"," * @api public"," */","","function Progress(runner, options) {","  Base.call(this, runner);","","  var self = this","    , options = options || {}","    , stats = this.stats","    , width = Base.window.width * .50 | 0","    , total = runner.total","    , complete = 0","    , max = Math.max;","","  // default chars","  options.open = options.open || '[';","  options.complete = options.complete || '&#226;&#150;&#172;';","  options.incomplete = options.incomplete || '&#226;&#139;&#133;';","  options.close = options.close || ']';","  options.verbose = false;","","  // tests started","  runner.on('start', function(){","    console.log();","    cursor.hide();","  });","","  // tests complete","  runner.on('test end', function(){","    var incomplete = total - complete","      , percent = complete++ / total","      , n = width * percent | 0","      , i = width - n;","","    cursor.CR();","    process.stdout.write('\\033[J');","    process.stdout.write(color('progress', '  ' + options.open));","    process.stdout.write(Array(n).join(options.complete));","    process.stdout.write(Array(i).join(options.incomplete));","    process.stdout.write(color('progress', options.close));","    if (options.verbose) {","      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));","    }","  });","","  // tests are complete, output some stats","  // and the failures if any","  runner.on('end', function(){","    cursor.show();","    console.log();","    self.epilogue();","  });","}","","/**"," * Inherit from `Base.prototype`."," */","","Progress.prototype.__proto__ = Base.prototype;"];
