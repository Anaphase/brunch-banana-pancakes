/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['reporters/spec.js']) {
  _$jscoverage['reporters/spec.js'] = [];
  _$jscoverage['reporters/spec.js'][6] = 0;
  _$jscoverage['reporters/spec.js'][14] = 0;
  _$jscoverage['reporters/spec.js'][23] = 0;
  _$jscoverage['reporters/spec.js'][24] = 0;
  _$jscoverage['reporters/spec.js'][26] = 0;
  _$jscoverage['reporters/spec.js'][31] = 0;
  _$jscoverage['reporters/spec.js'][32] = 0;
  _$jscoverage['reporters/spec.js'][35] = 0;
  _$jscoverage['reporters/spec.js'][36] = 0;
  _$jscoverage['reporters/spec.js'][39] = 0;
  _$jscoverage['reporters/spec.js'][40] = 0;
  _$jscoverage['reporters/spec.js'][41] = 0;
  _$jscoverage['reporters/spec.js'][44] = 0;
  _$jscoverage['reporters/spec.js'][45] = 0;
  _$jscoverage['reporters/spec.js'][46] = 0;
  _$jscoverage['reporters/spec.js'][49] = 0;
  _$jscoverage['reporters/spec.js'][50] = 0;
  _$jscoverage['reporters/spec.js'][53] = 0;
  _$jscoverage['reporters/spec.js'][54] = 0;
  _$jscoverage['reporters/spec.js'][55] = 0;
  _$jscoverage['reporters/spec.js'][58] = 0;
  _$jscoverage['reporters/spec.js'][59] = 0;
  _$jscoverage['reporters/spec.js'][60] = 0;
  _$jscoverage['reporters/spec.js'][63] = 0;
  _$jscoverage['reporters/spec.js'][64] = 0;
  _$jscoverage['reporters/spec.js'][66] = 0;
  _$jscoverage['reporters/spec.js'][70] = 0;
  _$jscoverage['reporters/spec.js'][71] = 0;
  _$jscoverage['reporters/spec.js'][75] = 0;
  _$jscoverage['reporters/spec.js'][76] = 0;
  _$jscoverage['reporters/spec.js'][77] = 0;
  _$jscoverage['reporters/spec.js'][80] = 0;
  _$jscoverage['reporters/spec.js'][87] = 0;
}
_$jscoverage['reporters/spec.js'][6]++;
var Base = require("./base"), cursor = Base.cursor, color = Base.color;
_$jscoverage['reporters/spec.js'][14]++;
exports = module.exports = Spec;
_$jscoverage['reporters/spec.js'][23]++;
function Spec(runner) {
  _$jscoverage['reporters/spec.js'][24]++;
  Base.call(this, runner);
  _$jscoverage['reporters/spec.js'][26]++;
  var self = this, stats = this.stats, indents = 0, n = 0;
  _$jscoverage['reporters/spec.js'][31]++;
  function indent() {
    _$jscoverage['reporters/spec.js'][32]++;
    return Array(indents).join("  ");
}
  _$jscoverage['reporters/spec.js'][35]++;
  runner.on("start", (function () {
  _$jscoverage['reporters/spec.js'][36]++;
  console.log();
}));
  _$jscoverage['reporters/spec.js'][39]++;
  runner.on("suite", (function (suite) {
  _$jscoverage['reporters/spec.js'][40]++;
  ++indents;
  _$jscoverage['reporters/spec.js'][41]++;
  console.log(color("suite", "%s%s"), indent(), suite.title);
}));
  _$jscoverage['reporters/spec.js'][44]++;
  runner.on("suite end", (function (suite) {
  _$jscoverage['reporters/spec.js'][45]++;
  --indents;
  _$jscoverage['reporters/spec.js'][46]++;
  if (1 == indents) {
    _$jscoverage['reporters/spec.js'][46]++;
    console.log();
  }
}));
  _$jscoverage['reporters/spec.js'][49]++;
  runner.on("test", (function (test) {
  _$jscoverage['reporters/spec.js'][50]++;
  process.stdout.write(indent() + color("pass", "  \u00e2\u0097\u00a6 " + test.title + ": "));
}));
  _$jscoverage['reporters/spec.js'][53]++;
  runner.on("pending", (function (test) {
  _$jscoverage['reporters/spec.js'][54]++;
  var fmt = indent() + color("pending", "  - %s");
  _$jscoverage['reporters/spec.js'][55]++;
  console.log(fmt, test.title);
}));
  _$jscoverage['reporters/spec.js'][58]++;
  runner.on("pass", (function (test) {
  _$jscoverage['reporters/spec.js'][59]++;
  if ("fast" == test.speed) {
    _$jscoverage['reporters/spec.js'][60]++;
    var fmt = indent() + color("checkmark", "  \u00e2\u009c\u0093") + color("pass", " %s ");
    _$jscoverage['reporters/spec.js'][63]++;
    cursor.CR();
    _$jscoverage['reporters/spec.js'][64]++;
    console.log(fmt, test.title);
  }
  else {
    _$jscoverage['reporters/spec.js'][66]++;
    var fmt = indent() + color("checkmark", "  \u00e2\u009c\u0093") + color("pass", " %s ") + color(test.speed, "(%dms)");
    _$jscoverage['reporters/spec.js'][70]++;
    cursor.CR();
    _$jscoverage['reporters/spec.js'][71]++;
    console.log(fmt, test.title, test.duration);
  }
}));
  _$jscoverage['reporters/spec.js'][75]++;
  runner.on("fail", (function (test, err) {
  _$jscoverage['reporters/spec.js'][76]++;
  cursor.CR();
  _$jscoverage['reporters/spec.js'][77]++;
  console.log(indent() + color("fail", "  %d) %s"), ++n, test.title);
}));
  _$jscoverage['reporters/spec.js'][80]++;
  runner.on("end", self.epilogue.bind(self));
}
_$jscoverage['reporters/spec.js'][87]++;
Spec.prototype.__proto__ = Base.prototype;
_$jscoverage['reporters/spec.js'].source = ["","/**"," * Module dependencies."," */","","var Base = require('./base')","  , cursor = Base.cursor","  , color = Base.color;","","/**"," * Expose `Spec`."," */","","exports = module.exports = Spec;","","/**"," * Initialize a new `Spec` test reporter."," *"," * @param {Runner} runner"," * @api public"," */","","function Spec(runner) {","  Base.call(this, runner);","","  var self = this","    , stats = this.stats","    , indents = 0","    , n = 0;","","  function indent() {","    return Array(indents).join('  ')","  }","","  runner.on('start', function(){","    console.log();","  });","","  runner.on('suite', function(suite){","    ++indents;","    console.log(color('suite', '%s%s'), indent(), suite.title);","  });","","  runner.on('suite end', function(suite){","    --indents;","    if (1 == indents) console.log();","  });","","  runner.on('test', function(test){","    process.stdout.write(indent() + color('pass', '  &#226;&#151;&#166; ' + test.title + ': '));","  });","","  runner.on('pending', function(test){","    var fmt = indent() + color('pending', '  - %s');","    console.log(fmt, test.title);","  });","","  runner.on('pass', function(test){","    if ('fast' == test.speed) {","      var fmt = indent()","        + color('checkmark', '  &#226;&#156;&#147;')","        + color('pass', ' %s ');","      cursor.CR();","      console.log(fmt, test.title);","    } else {","      var fmt = indent()","        + color('checkmark', '  &#226;&#156;&#147;')","        + color('pass', ' %s ')","        + color(test.speed, '(%dms)');","      cursor.CR();","      console.log(fmt, test.title, test.duration);","    }","  });","","  runner.on('fail', function(test, err){","    cursor.CR();","    console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);","  });","","  runner.on('end', self.epilogue.bind(self));","}","","/**"," * Inherit from `Base.prototype`."," */","","Spec.prototype.__proto__ = Base.prototype;"];
