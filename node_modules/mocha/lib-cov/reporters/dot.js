/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['reporters/dot.js']) {
  _$jscoverage['reporters/dot.js'] = [];
  _$jscoverage['reporters/dot.js'][6] = 0;
  _$jscoverage['reporters/dot.js'][13] = 0;
  _$jscoverage['reporters/dot.js'][22] = 0;
  _$jscoverage['reporters/dot.js'][23] = 0;
  _$jscoverage['reporters/dot.js'][25] = 0;
  _$jscoverage['reporters/dot.js'][30] = 0;
  _$jscoverage['reporters/dot.js'][31] = 0;
  _$jscoverage['reporters/dot.js'][34] = 0;
  _$jscoverage['reporters/dot.js'][35] = 0;
  _$jscoverage['reporters/dot.js'][38] = 0;
  _$jscoverage['reporters/dot.js'][39] = 0;
  _$jscoverage['reporters/dot.js'][40] = 0;
  _$jscoverage['reporters/dot.js'][41] = 0;
  _$jscoverage['reporters/dot.js'][43] = 0;
  _$jscoverage['reporters/dot.js'][47] = 0;
  _$jscoverage['reporters/dot.js'][48] = 0;
  _$jscoverage['reporters/dot.js'][49] = 0;
  _$jscoverage['reporters/dot.js'][52] = 0;
  _$jscoverage['reporters/dot.js'][53] = 0;
  _$jscoverage['reporters/dot.js'][54] = 0;
  _$jscoverage['reporters/dot.js'][62] = 0;
}
_$jscoverage['reporters/dot.js'][6]++;
var Base = require("./base"), color = Base.color;
_$jscoverage['reporters/dot.js'][13]++;
exports = module.exports = Dot;
_$jscoverage['reporters/dot.js'][22]++;
function Dot(runner) {
  _$jscoverage['reporters/dot.js'][23]++;
  Base.call(this, runner);
  _$jscoverage['reporters/dot.js'][25]++;
  var self = this, stats = this.stats, width = Base.window.width * 0.75 | 0, n = 0;
  _$jscoverage['reporters/dot.js'][30]++;
  runner.on("start", (function () {
  _$jscoverage['reporters/dot.js'][31]++;
  process.stdout.write("\n  ");
}));
  _$jscoverage['reporters/dot.js'][34]++;
  runner.on("pending", (function (test) {
  _$jscoverage['reporters/dot.js'][35]++;
  process.stdout.write(color("pending", "."));
}));
  _$jscoverage['reporters/dot.js'][38]++;
  runner.on("pass", (function (test) {
  _$jscoverage['reporters/dot.js'][39]++;
  if (++n % width == 0) {
    _$jscoverage['reporters/dot.js'][39]++;
    process.stdout.write("\n  ");
  }
  _$jscoverage['reporters/dot.js'][40]++;
  if ("slow" == test.speed) {
    _$jscoverage['reporters/dot.js'][41]++;
    process.stdout.write(color("bright yellow", "."));
  }
  else {
    _$jscoverage['reporters/dot.js'][43]++;
    process.stdout.write(color(test.speed, "."));
  }
}));
  _$jscoverage['reporters/dot.js'][47]++;
  runner.on("fail", (function (test, err) {
  _$jscoverage['reporters/dot.js'][48]++;
  if (++n % width == 0) {
    _$jscoverage['reporters/dot.js'][48]++;
    process.stdout.write("\n  ");
  }
  _$jscoverage['reporters/dot.js'][49]++;
  process.stdout.write(color("fail", "."));
}));
  _$jscoverage['reporters/dot.js'][52]++;
  runner.on("end", (function () {
  _$jscoverage['reporters/dot.js'][53]++;
  console.log();
  _$jscoverage['reporters/dot.js'][54]++;
  self.epilogue();
}));
}
_$jscoverage['reporters/dot.js'][62]++;
Dot.prototype.__proto__ = Base.prototype;
_$jscoverage['reporters/dot.js'].source = ["","/**"," * Module dependencies."," */","","var Base = require('./base')","  , color = Base.color;","","/**"," * Expose `Dot`."," */","","exports = module.exports = Dot;","","/**"," * Initialize a new `Dot` matrix test reporter."," *"," * @param {Runner} runner"," * @api public"," */","","function Dot(runner) {","  Base.call(this, runner);","","  var self = this","    , stats = this.stats","    , width = Base.window.width * .75 | 0","    , n = 0;","","  runner.on('start', function(){","    process.stdout.write('\\n  ');","  });","","  runner.on('pending', function(test){","    process.stdout.write(color('pending', '.'));","  });","","  runner.on('pass', function(test){","    if (++n % width == 0) process.stdout.write('\\n  ');","    if ('slow' == test.speed) {","      process.stdout.write(color('bright yellow', '.'));","    } else {","      process.stdout.write(color(test.speed, '.'));","    }","  });","","  runner.on('fail', function(test, err){","    if (++n % width == 0) process.stdout.write('\\n  ');","    process.stdout.write(color('fail', '.'));","  });","","  runner.on('end', function(){","    console.log();","    self.epilogue();","  });","}","","/**"," * Inherit from `Base.prototype`."," */","","Dot.prototype.__proto__ = Base.prototype;"];
