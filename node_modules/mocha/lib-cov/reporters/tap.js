/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['reporters/tap.js']) {
  _$jscoverage['reporters/tap.js'] = [];
  _$jscoverage['reporters/tap.js'][6] = 0;
  _$jscoverage['reporters/tap.js'][14] = 0;
  _$jscoverage['reporters/tap.js'][23] = 0;
  _$jscoverage['reporters/tap.js'][24] = 0;
  _$jscoverage['reporters/tap.js'][26] = 0;
  _$jscoverage['reporters/tap.js'][31] = 0;
  _$jscoverage['reporters/tap.js'][32] = 0;
  _$jscoverage['reporters/tap.js'][35] = 0;
  _$jscoverage['reporters/tap.js'][36] = 0;
  _$jscoverage['reporters/tap.js'][39] = 0;
  _$jscoverage['reporters/tap.js'][40] = 0;
  _$jscoverage['reporters/tap.js'][43] = 0;
  _$jscoverage['reporters/tap.js'][44] = 0;
  _$jscoverage['reporters/tap.js'][47] = 0;
  _$jscoverage['reporters/tap.js'][48] = 0;
  _$jscoverage['reporters/tap.js'][49] = 0;
  _$jscoverage['reporters/tap.js'][61] = 0;
  _$jscoverage['reporters/tap.js'][62] = 0;
}
_$jscoverage['reporters/tap.js'][6]++;
var Base = require("./base"), cursor = Base.cursor, color = Base.color;
_$jscoverage['reporters/tap.js'][14]++;
exports = module.exports = TAP;
_$jscoverage['reporters/tap.js'][23]++;
function TAP(runner) {
  _$jscoverage['reporters/tap.js'][24]++;
  Base.call(this, runner);
  _$jscoverage['reporters/tap.js'][26]++;
  var self = this, stats = this.stats, total = runner.total, n = 1;
  _$jscoverage['reporters/tap.js'][31]++;
  runner.on("start", (function () {
  _$jscoverage['reporters/tap.js'][32]++;
  console.log("%d..%d", 1, total);
}));
  _$jscoverage['reporters/tap.js'][35]++;
  runner.on("test end", (function () {
  _$jscoverage['reporters/tap.js'][36]++;
  ++n;
}));
  _$jscoverage['reporters/tap.js'][39]++;
  runner.on("pending", (function (test) {
  _$jscoverage['reporters/tap.js'][40]++;
  console.log("ok %d %s # SKIP -", n, title(test));
}));
  _$jscoverage['reporters/tap.js'][43]++;
  runner.on("pass", (function (test) {
  _$jscoverage['reporters/tap.js'][44]++;
  console.log("ok %d %s", n, title(test));
}));
  _$jscoverage['reporters/tap.js'][47]++;
  runner.on("fail", (function (test, err) {
  _$jscoverage['reporters/tap.js'][48]++;
  console.log("not ok %d %s", n, title(test));
  _$jscoverage['reporters/tap.js'][49]++;
  console.log(err.stack.replace(/^/gm, "  "));
}));
}
_$jscoverage['reporters/tap.js'][61]++;
function title(test) {
  _$jscoverage['reporters/tap.js'][62]++;
  return test.fullTitle().replace(/#/g, "");
}
_$jscoverage['reporters/tap.js'].source = ["","/**"," * Module dependencies."," */","","var Base = require('./base')","  , cursor = Base.cursor","  , color = Base.color;","","/**"," * Expose `TAP`."," */","","exports = module.exports = TAP;","","/**"," * Initialize a new `TAP` reporter."," *"," * @param {Runner} runner"," * @api public"," */","","function TAP(runner) {","  Base.call(this, runner);","","  var self = this","    , stats = this.stats","    , total = runner.total","    , n = 1;","","  runner.on('start', function(){","    console.log('%d..%d', 1, total);","  });","","  runner.on('test end', function(){","    ++n;","  });","","  runner.on('pending', function(test){","    console.log('ok %d %s # SKIP -', n, title(test));","  });","","  runner.on('pass', function(test){","    console.log('ok %d %s', n, title(test));","  });","","  runner.on('fail', function(test, err){","    console.log('not ok %d %s', n, title(test));","    console.log(err.stack.replace(/^/gm, '  '));","  });","}","","/**"," * Return a TAP-safe title of `test`"," *"," * @param {Object} test"," * @return {String}"," * @api private"," */","","function title(test) {","  return test.fullTitle().replace(/#/g, '');","}"];
