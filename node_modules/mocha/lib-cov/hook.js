/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['hook.js']) {
  _$jscoverage['hook.js'] = [];
  _$jscoverage['hook.js'][6] = 0;
  _$jscoverage['hook.js'][12] = 0;
  _$jscoverage['hook.js'][22] = 0;
  _$jscoverage['hook.js'][23] = 0;
  _$jscoverage['hook.js'][24] = 0;
  _$jscoverage['hook.js'][31] = 0;
}
_$jscoverage['hook.js'][6]++;
var Runnable = require("./runnable");
_$jscoverage['hook.js'][12]++;
module.exports = Hook;
_$jscoverage['hook.js'][22]++;
function Hook(title, fn) {
  _$jscoverage['hook.js'][23]++;
  Runnable.call(this, title, fn);
  _$jscoverage['hook.js'][24]++;
  this.type = "hook";
}
_$jscoverage['hook.js'][31]++;
Hook.prototype.__proto__ = Runnable.prototype;
_$jscoverage['hook.js'].source = ["","/**"," * Module dependencies."," */","","var Runnable = require('./runnable');","","/**"," * Expose `Hook`."," */","","module.exports = Hook;","","/**"," * Initialize a new `Hook` with the given `title` and callback `fn`."," *"," * @param {String} title"," * @param {Function} fn"," * @api private"," */","","function Hook(title, fn) {","  Runnable.call(this, title, fn);","  this.type = 'hook';","}","","/**"," * Inherit from `Runnable.prototype`."," */","","Hook.prototype.__proto__ = Runnable.prototype;"];
