/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['suite.js']) {
  _$jscoverage['suite.js'] = [];
  _$jscoverage['suite.js'][6] = 0;
  _$jscoverage['suite.js'][15] = 0;
  _$jscoverage['suite.js'][30] = 0;
  _$jscoverage['suite.js'][31] = 0;
  _$jscoverage['suite.js'][32] = 0;
  _$jscoverage['suite.js'][33] = 0;
  _$jscoverage['suite.js'][34] = 0;
  _$jscoverage['suite.js'][35] = 0;
  _$jscoverage['suite.js'][47] = 0;
  _$jscoverage['suite.js'][48] = 0;
  _$jscoverage['suite.js'][49] = 0;
  _$jscoverage['suite.js'][50] = 0;
  _$jscoverage['suite.js'][51] = 0;
  _$jscoverage['suite.js'][52] = 0;
  _$jscoverage['suite.js'][53] = 0;
  _$jscoverage['suite.js'][54] = 0;
  _$jscoverage['suite.js'][55] = 0;
  _$jscoverage['suite.js'][56] = 0;
  _$jscoverage['suite.js'][57] = 0;
  _$jscoverage['suite.js'][58] = 0;
  _$jscoverage['suite.js'][65] = 0;
  _$jscoverage['suite.js'][74] = 0;
  _$jscoverage['suite.js'][75] = 0;
  _$jscoverage['suite.js'][76] = 0;
  _$jscoverage['suite.js'][77] = 0;
  _$jscoverage['suite.js'][78] = 0;
  _$jscoverage['suite.js'][79] = 0;
  _$jscoverage['suite.js'][80] = 0;
  _$jscoverage['suite.js'][91] = 0;
  _$jscoverage['suite.js'][92] = 0;
  _$jscoverage['suite.js'][93] = 0;
  _$jscoverage['suite.js'][94] = 0;
  _$jscoverage['suite.js'][95] = 0;
  _$jscoverage['suite.js'][96] = 0;
  _$jscoverage['suite.js'][107] = 0;
  _$jscoverage['suite.js'][108] = 0;
  _$jscoverage['suite.js'][109] = 0;
  _$jscoverage['suite.js'][110] = 0;
  _$jscoverage['suite.js'][111] = 0;
  _$jscoverage['suite.js'][122] = 0;
  _$jscoverage['suite.js'][123] = 0;
  _$jscoverage['suite.js'][124] = 0;
  _$jscoverage['suite.js'][125] = 0;
  _$jscoverage['suite.js'][126] = 0;
  _$jscoverage['suite.js'][127] = 0;
  _$jscoverage['suite.js'][128] = 0;
  _$jscoverage['suite.js'][129] = 0;
  _$jscoverage['suite.js'][140] = 0;
  _$jscoverage['suite.js'][141] = 0;
  _$jscoverage['suite.js'][142] = 0;
  _$jscoverage['suite.js'][143] = 0;
  _$jscoverage['suite.js'][144] = 0;
  _$jscoverage['suite.js'][145] = 0;
  _$jscoverage['suite.js'][146] = 0;
  _$jscoverage['suite.js'][147] = 0;
  _$jscoverage['suite.js'][158] = 0;
  _$jscoverage['suite.js'][159] = 0;
  _$jscoverage['suite.js'][160] = 0;
  _$jscoverage['suite.js'][161] = 0;
  _$jscoverage['suite.js'][162] = 0;
  _$jscoverage['suite.js'][163] = 0;
  _$jscoverage['suite.js'][164] = 0;
  _$jscoverage['suite.js'][165] = 0;
  _$jscoverage['suite.js'][176] = 0;
  _$jscoverage['suite.js'][177] = 0;
  _$jscoverage['suite.js'][178] = 0;
  _$jscoverage['suite.js'][179] = 0;
  _$jscoverage['suite.js'][180] = 0;
  _$jscoverage['suite.js'][181] = 0;
  _$jscoverage['suite.js'][182] = 0;
  _$jscoverage['suite.js'][183] = 0;
  _$jscoverage['suite.js'][194] = 0;
  _$jscoverage['suite.js'][195] = 0;
  _$jscoverage['suite.js'][196] = 0;
  _$jscoverage['suite.js'][197] = 0;
  _$jscoverage['suite.js'][198] = 0;
  _$jscoverage['suite.js'][199] = 0;
  _$jscoverage['suite.js'][200] = 0;
  _$jscoverage['suite.js'][211] = 0;
  _$jscoverage['suite.js'][212] = 0;
  _$jscoverage['suite.js'][213] = 0;
  _$jscoverage['suite.js'][214] = 0;
  _$jscoverage['suite.js'][215] = 0;
  _$jscoverage['suite.js'][216] = 0;
  _$jscoverage['suite.js'][217] = 0;
  _$jscoverage['suite.js'][228] = 0;
  _$jscoverage['suite.js'][229] = 0;
  _$jscoverage['suite.js'][230] = 0;
  _$jscoverage['suite.js'][231] = 0;
  _$jscoverage['suite.js'][233] = 0;
  _$jscoverage['suite.js'][243] = 0;
  _$jscoverage['suite.js'][244] = 0;
  _$jscoverage['suite.js'][245] = 0;
}
_$jscoverage['suite.js'][6]++;
var EventEmitter = require("events").EventEmitter, debug = require("debug")("suite"), utils = require("./utils"), Hook = require("./hook");
_$jscoverage['suite.js'][15]++;
exports = module.exports = Suite;
_$jscoverage['suite.js'][30]++;
exports.create = (function (parent, title) {
  _$jscoverage['suite.js'][31]++;
  var suite = new Suite(title, parent.ctx);
  _$jscoverage['suite.js'][32]++;
  suite.parent = parent;
  _$jscoverage['suite.js'][33]++;
  title = suite.fullTitle();
  _$jscoverage['suite.js'][34]++;
  parent.addSuite(suite);
  _$jscoverage['suite.js'][35]++;
  return suite;
});
_$jscoverage['suite.js'][47]++;
function Suite(title, ctx) {
  _$jscoverage['suite.js'][48]++;
  this.title = title;
  _$jscoverage['suite.js'][49]++;
  this.ctx = ctx;
  _$jscoverage['suite.js'][50]++;
  this.suites = [];
  _$jscoverage['suite.js'][51]++;
  this.tests = [];
  _$jscoverage['suite.js'][52]++;
  this._beforeEach = [];
  _$jscoverage['suite.js'][53]++;
  this._beforeAll = [];
  _$jscoverage['suite.js'][54]++;
  this._afterEach = [];
  _$jscoverage['suite.js'][55]++;
  this._afterAll = [];
  _$jscoverage['suite.js'][56]++;
  this.root = ! title;
  _$jscoverage['suite.js'][57]++;
  this._timeout = 2000;
  _$jscoverage['suite.js'][58]++;
  this._bail = false;
}
_$jscoverage['suite.js'][65]++;
Suite.prototype.__proto__ = EventEmitter.prototype;
_$jscoverage['suite.js'][74]++;
Suite.prototype.clone = (function () {
  _$jscoverage['suite.js'][75]++;
  var suite = new Suite(this.title);
  _$jscoverage['suite.js'][76]++;
  debug("clone");
  _$jscoverage['suite.js'][77]++;
  suite.ctx = this.ctx;
  _$jscoverage['suite.js'][78]++;
  suite.timeout(this.timeout());
  _$jscoverage['suite.js'][79]++;
  suite.bail(this.bail());
  _$jscoverage['suite.js'][80]++;
  return suite;
});
_$jscoverage['suite.js'][91]++;
Suite.prototype.timeout = (function (ms) {
  _$jscoverage['suite.js'][92]++;
  if (0 == arguments.length) {
    _$jscoverage['suite.js'][92]++;
    return this._timeout;
  }
  _$jscoverage['suite.js'][93]++;
  if (String(ms).match(/s$/)) {
    _$jscoverage['suite.js'][93]++;
    ms = parseFloat(ms) * 1000;
  }
  _$jscoverage['suite.js'][94]++;
  debug("timeout %d", ms);
  _$jscoverage['suite.js'][95]++;
  this._timeout = parseInt(ms, 10);
  _$jscoverage['suite.js'][96]++;
  return this;
});
_$jscoverage['suite.js'][107]++;
Suite.prototype.bail = (function (bail) {
  _$jscoverage['suite.js'][108]++;
  if (0 == arguments.length) {
    _$jscoverage['suite.js'][108]++;
    return this._bail;
  }
  _$jscoverage['suite.js'][109]++;
  debug("bail %s", bail);
  _$jscoverage['suite.js'][110]++;
  this._bail = bail;
  _$jscoverage['suite.js'][111]++;
  return this;
});
_$jscoverage['suite.js'][122]++;
Suite.prototype.beforeAll = (function (fn) {
  _$jscoverage['suite.js'][123]++;
  var hook = new Hook("\"before all\" hook", fn);
  _$jscoverage['suite.js'][124]++;
  hook.parent = this;
  _$jscoverage['suite.js'][125]++;
  hook.timeout(this.timeout());
  _$jscoverage['suite.js'][126]++;
  hook.ctx = this.ctx;
  _$jscoverage['suite.js'][127]++;
  this._beforeAll.push(hook);
  _$jscoverage['suite.js'][128]++;
  this.emit("beforeAll", hook);
  _$jscoverage['suite.js'][129]++;
  return this;
});
_$jscoverage['suite.js'][140]++;
Suite.prototype.afterAll = (function (fn) {
  _$jscoverage['suite.js'][141]++;
  var hook = new Hook("\"after all\" hook", fn);
  _$jscoverage['suite.js'][142]++;
  hook.parent = this;
  _$jscoverage['suite.js'][143]++;
  hook.timeout(this.timeout());
  _$jscoverage['suite.js'][144]++;
  hook.ctx = this.ctx;
  _$jscoverage['suite.js'][145]++;
  this._afterAll.push(hook);
  _$jscoverage['suite.js'][146]++;
  this.emit("afterAll", hook);
  _$jscoverage['suite.js'][147]++;
  return this;
});
_$jscoverage['suite.js'][158]++;
Suite.prototype.beforeEach = (function (fn) {
  _$jscoverage['suite.js'][159]++;
  var hook = new Hook("\"before each\" hook", fn);
  _$jscoverage['suite.js'][160]++;
  hook.parent = this;
  _$jscoverage['suite.js'][161]++;
  hook.timeout(this.timeout());
  _$jscoverage['suite.js'][162]++;
  hook.ctx = this.ctx;
  _$jscoverage['suite.js'][163]++;
  this._beforeEach.push(hook);
  _$jscoverage['suite.js'][164]++;
  this.emit("beforeEach", hook);
  _$jscoverage['suite.js'][165]++;
  return this;
});
_$jscoverage['suite.js'][176]++;
Suite.prototype.afterEach = (function (fn) {
  _$jscoverage['suite.js'][177]++;
  var hook = new Hook("\"after each\" hook", fn);
  _$jscoverage['suite.js'][178]++;
  hook.parent = this;
  _$jscoverage['suite.js'][179]++;
  hook.timeout(this.timeout());
  _$jscoverage['suite.js'][180]++;
  hook.ctx = this.ctx;
  _$jscoverage['suite.js'][181]++;
  this._afterEach.push(hook);
  _$jscoverage['suite.js'][182]++;
  this.emit("afterEach", hook);
  _$jscoverage['suite.js'][183]++;
  return this;
});
_$jscoverage['suite.js'][194]++;
Suite.prototype.addSuite = (function (suite) {
  _$jscoverage['suite.js'][195]++;
  suite.parent = this;
  _$jscoverage['suite.js'][196]++;
  suite.timeout(this.timeout());
  _$jscoverage['suite.js'][197]++;
  suite.bail(this.bail());
  _$jscoverage['suite.js'][198]++;
  this.suites.push(suite);
  _$jscoverage['suite.js'][199]++;
  this.emit("suite", suite);
  _$jscoverage['suite.js'][200]++;
  return this;
});
_$jscoverage['suite.js'][211]++;
Suite.prototype.addTest = (function (test) {
  _$jscoverage['suite.js'][212]++;
  test.parent = this;
  _$jscoverage['suite.js'][213]++;
  test.timeout(this.timeout());
  _$jscoverage['suite.js'][214]++;
  test.ctx = this.ctx;
  _$jscoverage['suite.js'][215]++;
  this.tests.push(test);
  _$jscoverage['suite.js'][216]++;
  this.emit("test", test);
  _$jscoverage['suite.js'][217]++;
  return this;
});
_$jscoverage['suite.js'][228]++;
Suite.prototype.fullTitle = (function () {
  _$jscoverage['suite.js'][229]++;
  if (this.parent) {
    _$jscoverage['suite.js'][230]++;
    var full = this.parent.fullTitle();
    _$jscoverage['suite.js'][231]++;
    if (full) {
      _$jscoverage['suite.js'][231]++;
      return full + " " + this.title;
    }
  }
  _$jscoverage['suite.js'][233]++;
  return this.title;
});
_$jscoverage['suite.js'][243]++;
Suite.prototype.total = (function () {
  _$jscoverage['suite.js'][244]++;
  return utils.reduce(this.suites, (function (sum, suite) {
  _$jscoverage['suite.js'][245]++;
  return sum + suite.total();
}), 0) + this.tests.length;
});
_$jscoverage['suite.js'].source = ["","/**"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter","  , debug = require('debug')('suite')","  , utils = require('./utils')","  , Hook = require('./hook');","","/**"," * Expose `Suite`."," */","","exports = module.exports = Suite;","","/**"," * Create a new `Suite` with the given `title`"," * and parent `Suite`. When a suite with the"," * same title is already present, that suite"," * is returned to provide nicer reporter"," * and more flexible meta-testing."," *"," * @param {Suite} parent"," * @param {String} title"," * @return {Suite}"," * @api public"," */","","exports.create = function(parent, title){","  var suite = new Suite(title, parent.ctx);","  suite.parent = parent;","  title = suite.fullTitle();","  parent.addSuite(suite);","  return suite;","};","","/**"," * Initialize a new `Suite` with the given"," * `title` and `ctx`."," *"," * @param {String} title"," * @param {Context} ctx"," * @api private"," */","","function Suite(title, ctx) {","  this.title = title;","  this.ctx = ctx;","  this.suites = [];","  this.tests = [];","  this._beforeEach = [];","  this._beforeAll = [];","  this._afterEach = [];","  this._afterAll = [];","  this.root = !title;","  this._timeout = 2000;","  this._bail = false;","}","","/**"," * Inherit from `EventEmitter.prototype`."," */","","Suite.prototype.__proto__ = EventEmitter.prototype;","","/**"," * Return a clone of this `Suite`."," *"," * @return {Suite}"," * @api private"," */","","Suite.prototype.clone = function(){","  var suite = new Suite(this.title);","  debug('clone');","  suite.ctx = this.ctx;","  suite.timeout(this.timeout());","  suite.bail(this.bail());","  return suite;","};","","/**"," * Set timeout `ms` or short-hand such as \"2s\"."," *"," * @param {Number|String} ms"," * @return {Suite|Number} for chaining"," * @api private"," */","","Suite.prototype.timeout = function(ms){","  if (0 == arguments.length) return this._timeout;","  if (String(ms).match(/s$/)) ms = parseFloat(ms) * 1000;","  debug('timeout %d', ms);","  this._timeout = parseInt(ms, 10);","  return this;","};","","/**"," * Sets whether to bail after first error."," *"," * @parma {Boolean} bail"," * @return {Suite|Number} for chaining"," * @api private"," */","","Suite.prototype.bail = function(bail){","  if (0 == arguments.length) return this._bail;","  debug('bail %s', bail);","  this._bail = bail;","  return this;","};","","/**"," * Run `fn(test[, done])` before running tests."," *"," * @param {Function} fn"," * @return {Suite} for chaining"," * @api private"," */","","Suite.prototype.beforeAll = function(fn){","  var hook = new Hook('\"before all\" hook', fn);","  hook.parent = this;","  hook.timeout(this.timeout());","  hook.ctx = this.ctx;","  this._beforeAll.push(hook);","  this.emit('beforeAll', hook);","  return this;","};","","/**"," * Run `fn(test[, done])` after running tests."," *"," * @param {Function} fn"," * @return {Suite} for chaining"," * @api private"," */","","Suite.prototype.afterAll = function(fn){","  var hook = new Hook('\"after all\" hook', fn);","  hook.parent = this;","  hook.timeout(this.timeout());","  hook.ctx = this.ctx;","  this._afterAll.push(hook);","  this.emit('afterAll', hook);","  return this;","};","","/**"," * Run `fn(test[, done])` before each test case."," *"," * @param {Function} fn"," * @return {Suite} for chaining"," * @api private"," */","","Suite.prototype.beforeEach = function(fn){","  var hook = new Hook('\"before each\" hook', fn);","  hook.parent = this;","  hook.timeout(this.timeout());","  hook.ctx = this.ctx;","  this._beforeEach.push(hook);","  this.emit('beforeEach', hook);","  return this;","};","","/**"," * Run `fn(test[, done])` after each test case."," *"," * @param {Function} fn"," * @return {Suite} for chaining"," * @api private"," */","","Suite.prototype.afterEach = function(fn){","  var hook = new Hook('\"after each\" hook', fn);","  hook.parent = this;","  hook.timeout(this.timeout());","  hook.ctx = this.ctx;","  this._afterEach.push(hook);","  this.emit('afterEach', hook);","  return this;","};","","/**"," * Add a test `suite`."," *"," * @param {Suite} suite"," * @return {Suite} for chaining"," * @api private"," */","","Suite.prototype.addSuite = function(suite){","  suite.parent = this;","  suite.timeout(this.timeout());","  suite.bail(this.bail());","  this.suites.push(suite);","  this.emit('suite', suite);","  return this;","};","","/**"," * Add a `test` to this suite."," *"," * @param {Test} test"," * @return {Suite} for chaining"," * @api private"," */","","Suite.prototype.addTest = function(test){","  test.parent = this;","  test.timeout(this.timeout());","  test.ctx = this.ctx;","  this.tests.push(test);","  this.emit('test', test);","  return this;","};","","/**"," * Return the full title generated by recursively"," * concatenating the parent's full title."," *"," * @return {String}"," * @api public"," */","","Suite.prototype.fullTitle = function(){","  if (this.parent) {","    var full = this.parent.fullTitle();","    if (full) return full + ' ' + this.title;","  }","  return this.title;","};","","/**"," * Return the total number of tests."," *"," * @return {Number}"," * @api public"," */","","Suite.prototype.total = function(){","  return utils.reduce(this.suites, function(sum, suite){","    return sum + suite.total();","  }, 0) + this.tests.length;","};"];
