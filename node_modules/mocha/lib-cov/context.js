/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['context.js']) {
  _$jscoverage['context.js'] = [];
  _$jscoverage['context.js'][6] = 0;
  _$jscoverage['context.js'][14] = 0;
  _$jscoverage['context.js'][24] = 0;
  _$jscoverage['context.js'][25] = 0;
  _$jscoverage['context.js'][26] = 0;
  _$jscoverage['context.js'][37] = 0;
  _$jscoverage['context.js'][38] = 0;
  _$jscoverage['context.js'][39] = 0;
  _$jscoverage['context.js'][49] = 0;
  _$jscoverage['context.js'][50] = 0;
  _$jscoverage['context.js'][51] = 0;
}
_$jscoverage['context.js'][6]++;
module.exports = Context;
_$jscoverage['context.js'][14]++;
function Context() {
}
_$jscoverage['context.js'][24]++;
Context.prototype.test = (function (test) {
  _$jscoverage['context.js'][25]++;
  this._test = test;
  _$jscoverage['context.js'][26]++;
  return this;
});
_$jscoverage['context.js'][37]++;
Context.prototype.timeout = (function (ms) {
  _$jscoverage['context.js'][38]++;
  this._test.timeout(ms);
  _$jscoverage['context.js'][39]++;
  return this;
});
_$jscoverage['context.js'][49]++;
Context.prototype.inspect = (function () {
  _$jscoverage['context.js'][50]++;
  return JSON.stringify(this, (function (key, val) {
  _$jscoverage['context.js'][51]++;
  return "_test" == key? undefined: val;
}), 2);
});
_$jscoverage['context.js'].source = ["","/**"," * Expose `Context`."," */","","module.exports = Context;","","/**"," * Initialize a new `Context`."," *"," * @api private"," */","","function Context(){}","","/**"," * Set the context `Test` to `test`."," *"," * @param {Test} test"," * @return {Context}"," * @api private"," */","","Context.prototype.test = function(test){","  this._test = test;","  return this;","};","","/**"," * Set test timeout `ms`."," *"," * @param {Number} ms"," * @return {Context} self"," * @api private"," */","","Context.prototype.timeout = function(ms){","  this._test.timeout(ms);","  return this;","};","","/**"," * Inspect the context void of `._test`."," *"," * @return {String}"," * @api private"," */","","Context.prototype.inspect = function(){","  return JSON.stringify(this, function(key, val){","    return '_test' == key","      ? undefined","      : val;","  }, 2);","};"];
