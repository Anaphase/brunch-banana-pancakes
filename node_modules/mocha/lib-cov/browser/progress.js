/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['browser/progress.js']) {
  _$jscoverage['browser/progress.js'] = [];
  _$jscoverage['browser/progress.js'][6] = 0;
  _$jscoverage['browser/progress.js'][12] = 0;
  _$jscoverage['browser/progress.js'][13] = 0;
  _$jscoverage['browser/progress.js'][14] = 0;
  _$jscoverage['browser/progress.js'][15] = 0;
  _$jscoverage['browser/progress.js'][16] = 0;
  _$jscoverage['browser/progress.js'][27] = 0;
  _$jscoverage['browser/progress.js'][28] = 0;
  _$jscoverage['browser/progress.js'][29] = 0;
  _$jscoverage['browser/progress.js'][40] = 0;
  _$jscoverage['browser/progress.js'][41] = 0;
  _$jscoverage['browser/progress.js'][42] = 0;
  _$jscoverage['browser/progress.js'][53] = 0;
  _$jscoverage['browser/progress.js'][54] = 0;
  _$jscoverage['browser/progress.js'][55] = 0;
  _$jscoverage['browser/progress.js'][65] = 0;
  _$jscoverage['browser/progress.js'][66] = 0;
  _$jscoverage['browser/progress.js'][67] = 0;
  _$jscoverage['browser/progress.js'][77] = 0;
  _$jscoverage['browser/progress.js'][78] = 0;
  _$jscoverage['browser/progress.js'][79] = 0;
  _$jscoverage['browser/progress.js'][89] = 0;
  _$jscoverage['browser/progress.js'][90] = 0;
  _$jscoverage['browser/progress.js'][98] = 0;
  _$jscoverage['browser/progress.js'][100] = 0;
  _$jscoverage['browser/progress.js'][101] = 0;
  _$jscoverage['browser/progress.js'][104] = 0;
  _$jscoverage['browser/progress.js'][105] = 0;
  _$jscoverage['browser/progress.js'][106] = 0;
  _$jscoverage['browser/progress.js'][107] = 0;
  _$jscoverage['browser/progress.js'][110] = 0;
  _$jscoverage['browser/progress.js'][111] = 0;
  _$jscoverage['browser/progress.js'][112] = 0;
  _$jscoverage['browser/progress.js'][113] = 0;
  _$jscoverage['browser/progress.js'][116] = 0;
  _$jscoverage['browser/progress.js'][119] = 0;
  _$jscoverage['browser/progress.js'][124] = 0;
}
_$jscoverage['browser/progress.js'][6]++;
module.exports = Progress;
_$jscoverage['browser/progress.js'][12]++;
function Progress() {
  _$jscoverage['browser/progress.js'][13]++;
  this.percent = 0;
  _$jscoverage['browser/progress.js'][14]++;
  this.size(0);
  _$jscoverage['browser/progress.js'][15]++;
  this.fontSize(11);
  _$jscoverage['browser/progress.js'][16]++;
  this.font("helvetica, arial, sans-serif");
}
_$jscoverage['browser/progress.js'][27]++;
Progress.prototype.size = (function (n) {
  _$jscoverage['browser/progress.js'][28]++;
  this._size = n;
  _$jscoverage['browser/progress.js'][29]++;
  return this;
});
_$jscoverage['browser/progress.js'][40]++;
Progress.prototype.text = (function (str) {
  _$jscoverage['browser/progress.js'][41]++;
  this._text = str;
  _$jscoverage['browser/progress.js'][42]++;
  return this;
});
_$jscoverage['browser/progress.js'][53]++;
Progress.prototype.fontSize = (function (n) {
  _$jscoverage['browser/progress.js'][54]++;
  this._fontSize = n;
  _$jscoverage['browser/progress.js'][55]++;
  return this;
});
_$jscoverage['browser/progress.js'][65]++;
Progress.prototype.font = (function (family) {
  _$jscoverage['browser/progress.js'][66]++;
  this._font = family;
  _$jscoverage['browser/progress.js'][67]++;
  return this;
});
_$jscoverage['browser/progress.js'][77]++;
Progress.prototype.update = (function (n) {
  _$jscoverage['browser/progress.js'][78]++;
  this.percent = n;
  _$jscoverage['browser/progress.js'][79]++;
  return this;
});
_$jscoverage['browser/progress.js'][89]++;
Progress.prototype.draw = (function (ctx) {
  _$jscoverage['browser/progress.js'][90]++;
  var percent = Math.min(this.percent, 100), size = this._size, half = size / 2, x = half, y = half, rad = half - 1, fontSize = this._fontSize;
  _$jscoverage['browser/progress.js'][98]++;
  ctx.font = fontSize + "px " + this._font;
  _$jscoverage['browser/progress.js'][100]++;
  var angle = Math.PI * 2 * (percent / 100);
  _$jscoverage['browser/progress.js'][101]++;
  ctx.clearRect(0, 0, size, size);
  _$jscoverage['browser/progress.js'][104]++;
  ctx.strokeStyle = "#9f9f9f";
  _$jscoverage['browser/progress.js'][105]++;
  ctx.beginPath();
  _$jscoverage['browser/progress.js'][106]++;
  ctx.arc(x, y, rad, 0, angle, false);
  _$jscoverage['browser/progress.js'][107]++;
  ctx.stroke();
  _$jscoverage['browser/progress.js'][110]++;
  ctx.strokeStyle = "#eee";
  _$jscoverage['browser/progress.js'][111]++;
  ctx.beginPath();
  _$jscoverage['browser/progress.js'][112]++;
  ctx.arc(x, y, rad - 1, 0, angle, true);
  _$jscoverage['browser/progress.js'][113]++;
  ctx.stroke();
  _$jscoverage['browser/progress.js'][116]++;
  var text = this._text || (percent | 0) + "%", w = ctx.measureText(text).width;
  _$jscoverage['browser/progress.js'][119]++;
  ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);
  _$jscoverage['browser/progress.js'][124]++;
  return this;
});
_$jscoverage['browser/progress.js'].source = ["","/**"," * Expose `Progress`."," */","","module.exports = Progress;","","/**"," * Initialize a new `Progress` indicator."," */","","function Progress() {","  this.percent = 0;","  this.size(0);","  this.fontSize(11);","  this.font('helvetica, arial, sans-serif');","}","","/**"," * Set progress size to `n`."," *"," * @param {Number} n"," * @return {Progress} for chaining"," * @api public"," */","","Progress.prototype.size = function(n){","  this._size = n;","  return this;","};","","/**"," * Set text to `str`."," *"," * @param {String} str"," * @return {Progress} for chaining"," * @api public"," */","","Progress.prototype.text = function(str){","  this._text = str;","  return this;","};","","/**"," * Set font size to `n`."," *"," * @param {Number} n"," * @return {Progress} for chaining"," * @api public"," */","","Progress.prototype.fontSize = function(n){","  this._fontSize = n;","  return this;","};","","/**"," * Set font `family`."," *"," * @param {String} family"," * @return {Progress} for chaining"," */","","Progress.prototype.font = function(family){","  this._font = family;","  return this;","};","","/**"," * Update percentage to `n`."," *"," * @param {Number} n"," * @return {Progress} for chaining"," */","","Progress.prototype.update = function(n){","  this.percent = n;","  return this;","};","","/**"," * Draw on `ctx`."," *"," * @param {CanvasRenderingContext2d} ctx"," * @return {Progress} for chaining"," */","","Progress.prototype.draw = function(ctx){","  var percent = Math.min(this.percent, 100)","    , size = this._size","    , half = size / 2","    , x = half","    , y = half","    , rad = half - 1","    , fontSize = this._fontSize;","","  ctx.font = fontSize + 'px ' + this._font;","","  var angle = Math.PI * 2 * (percent / 100);","  ctx.clearRect(0, 0, size, size);","","  // outer circle","  ctx.strokeStyle = '#9f9f9f';","  ctx.beginPath();","  ctx.arc(x, y, rad, 0, angle, false);","  ctx.stroke();","","  // inner circle","  ctx.strokeStyle = '#eee';","  ctx.beginPath();","  ctx.arc(x, y, rad - 1, 0, angle, true);","  ctx.stroke();","","  // text","  var text = this._text || (percent | 0) + '%'","    , w = ctx.measureText(text).width;","","  ctx.fillText(","      text","    , x - w / 2 + 1","    , y + fontSize / 2 - 1);","","  return this;","};"];
